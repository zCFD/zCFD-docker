version: "3.2"

services:
  dev:
    build:
      context: dev
      dockerfile: Dockerfile
    image: centos7dev
    container_name: centos7dev_server
    hostname: centos7dev
    ports:
      - 8080:8080
    volumes:
      - workspace:/workspace
      - ~/.ssh:/home/dev/.ssh
      - licences:/opt/rlm/licences
      - /tmp/.X11-unix:/tmp/.X11-unix
    environment:
      - GIT_AUTHOR_NAME=${GIT_AUTHOR_NAME}
      - GIT_AUTHOR_EMAIL=${GIT_AUTHOR_EMAIL}
      - GIT_COMMITTER_NAME=${GIT_AUTHOR_NAME}
      - GIT_COMMITTER_EMAIL=${GIT_AUTHOR_EMAIL}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - DISPLAY=${IP}:0
    security_opt:
      - seccomp:./seccomp_profile.json
    privileged: true
    cap_add:
      - SYS_ADMIN
    sysctls:
      - net.ipv6.conf.all.disable_ipv6=1
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G
        reservations:
          cpus: '1'
          memory: 1G

  build6:
    build:
      context: build6
      dockerfile: Dockerfile
    image: centos6build
    container_name: centos6build_server
    hostname: centos6build
    volumes:
      - workspace:/workspace
      - ~/.ssh:/home/dev/.ssh
      - licences:/opt/rlm/licences
      - /tmp/.X11-unix:/tmp/.X11-unix
      - type: volume
        source: intel
        target: /opt/intel
        volume:
          nocopy: true
    environment:
      - GIT_AUTHOR_NAME=${GIT_AUTHOR_NAME}
      - GIT_AUTHOR_EMAIL=${GIT_AUTHOR_EMAIL}
      - GIT_COMMITTER_NAME=${GIT_AUTHOR_NAME}
      - GIT_COMMITTER_EMAIL=${GIT_AUTHOR_EMAIL}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - DISPLAY=${IP}:0
    security_opt:
      - seccomp:./seccomp_profile.json
    privileged: true
    cap_add:
      - SYS_ADMIN
    sysctls:
      - net.ipv6.conf.all.disable_ipv6=1
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G
        reservations:
          cpus: '1'
          memory: 1G

  c9:
    build:
      context: c9
      dockerfile: Dockerfile
    image: c9
    container_name: c9_server
    hostname: c9
    ports:
      - 8080:8080
    volumes:
      - workspace:/workspace

  notebook:
    build: 
      context: notebook
      dockerfile: Dockerfile
    image: centos7notebook
    container_name: centos7notebook_server
    hostname: centos7notebook
    ports:
      - 8090:8090
    volumes:
      - workspace:/workspace
      - ~/.ssh:/home/dev/.ssh
    depends_on:
      - dev
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}

  lab:
    build:
      context: lab
      dockerfile: Dockerfile
    image: centos7lab
    container_name: centos7lab_server
    hostname: centos7lab
    ports:
      - 8095:8095
    volumes:
      - workspace:/workspace
      - ~/.ssh:/home/dev/.ssh
    depends_on:
      - dev
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}

  licserver:
    build:
      context: licserver
      dockerfile: Dockerfile
    image: licserver
    container_name: licence_server
    hostname: licserver
    mac_address: 02:42:ac:11:65:41
    ports:
      - 5053:5053
      - 5054:5054
      - 5056:5056
    volumes:
      - licences:/opt/rlm/licences
    environment:
      - PRIMARY_SERVER=1

  licserver_failover:
    image: licserver
    container_name: licence_server_failover
    hostname: licserver_failover
    mac_address: 02:42:ac:11:65:42
    ports:
      - 6053:5053
      - 6054:5054
      - 6056:5056
    volumes:
      - licences:/opt/rlm/licences
    depends_on:
      - licserver
    environment:
      - PRIMARY_SERVER=0

  intelinstall:
    build:
      context: intelinstall
      dockerfile: Dockerfile
    image: intelinstall
    container_name: intelinstall
    hostname: intelinstall
    volumes:
      - intel:/opt/intel
     
volumes:
  workspace:
  licences:
  intel:
